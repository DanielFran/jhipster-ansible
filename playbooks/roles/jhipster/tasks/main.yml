---

# Release

- name: Change version to {{release_version}}
  shell: ./jhipster-version.sh {{release_version}}
  args:
    chdir: '{{github_folder}}/{{github_repository}}'

- name: Clean install
  shell: ./mvnw clean install -Dgpg.skip
  args:
    chdir: '{{github_folder}}/{{github_repository}}'

- name: Commit Release {{release_version}}
  shell: git add . && git commit -m 'Release {{release_version}}'
  args:
    chdir: '{{github_folder}}/{{github_repository}}'

- name: Create jhipster tag {{release_version}}
  shell: git tag -a {{release_version}} -m 'Release {{release_version}}'
  args:
    chdir: '{{github_folder}}/{{github_repository}}'

# Deployment to Maven Central

- name: Save current settings.xml if exists
  shell: mv settings.xml settings.xml.current.save
  args:
    chdir: '~/.m2/'
  ignore_errors: yes

- name: Put the correct settings.xml
  shell: cp settings.xml.jhipster settings.xml
  args:
    chdir: '~/.m2/'

# - name: Deploy to Maven Central
#   shell: ./mvnw deploy
#   args:
#     chdir: '{{github_folder}}/{{github_repository}}'

- name: Remove current settings.xml
  shell: rm settings.xml
  args:
    chdir: '~/.m2/'
  ignore_errors: yes

- name: Put back the previous settings.xml
  shell: mv settings.xml.current.save settings.xml
  args:
    chdir: '~/.m2/'
  ignore_errors: yes

# - name: Push
#   shell: git push upstream master && git push upstream {{release_version}}
#   args:
#     chdir: '{{github_folder}}/{{github_repository}}'

# Change version for development

- name: Change version to {{next_version}}
  shell: ./jhipster-version.sh {{next_version}}
  args:
    chdir: '{{github_folder}}/{{github_repository}}'

- name: Commit Release {{next_version}}
  shell: git add . && git commit -m 'Change version for development {{next_version}}'
  args:
    chdir: '{{github_folder}}/{{github_repository}}'

# - name: Push
#   shell: git push upstream master
#   args:
#     chdir: '{{github_folder}}/{{github_repository}}'
